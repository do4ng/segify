export default "// packages/segify/src/client/lib.ts\nvar $$cc = (t, a, c = []) => {\n  a.children = c;\n  const component = new t(a);\n  const cs = component.$$components();\n  component.$$events();\n  return cs;\n};\nvar $$ce = (t, a, c = []) => {\n  if (typeof t !== \"string\")\n    return $$cc(t, a, c);\n  const component = document.createElement(t);\n  for (const key in a) {\n    if (Array.isArray(a[key])) {\n      let [data, original] = a[key];\n      console.log(data, original, $$DEV_PROPS);\n      for (const att of data) {\n        original = original.replace(att, $$DEV_PROPS[att]());\n      }\n      component.setAttribute(key, original);\n    } else {\n      component.setAttribute(key, a[key]);\n    }\n  }\n  for (const child of c) {\n    Array.isArray(child) && child.forEach((ct) => component.appendChild(ct));\n    $$isElement(child) && component.appendChild(child);\n  }\n  return component;\n};\nvar $$ct = (t) => document.createTextNode(t);\nvar $$cd = (t, s = true) => {\n  const subscriber = document.createTextNode(t());\n  s && $$subscribe.push([subscriber, t]);\n  return subscriber;\n};\nfunction $$isElement(element) {\n  return element instanceof Element || element instanceof HTMLDocument || element instanceof Text;\n}\nwindow.$$$$ = {\n  $$cc,\n  $$ce,\n  $$ct,\n  $$cd,\n  $$isElement\n};\n"